import"./modulepreload-polyfill-3cfb730f.js";const n={apiKey:"AIzaSyD19hXl7T_hR22RKTbO0HRqzJLWB-dhnpw",authDomain:"small-games-dda7a.firebaseapp.com",projectId:"small-games-dda7a",storageBucket:"small-games-dda7a.appspot.com",messagingSenderId:"536294849994",appId:"1:536294849994:web:a7eaf666f68f46c537e333"};firebase.apps.length||firebase.initializeApp(n);const r=firebase.firestore(),t="3";async function s(){try{const e=await r.collection("games").where("gate","==",t).get();if(e.empty)return console.log("No matching game found."),"";{const o=e.docs[0].data();return console.log("Found matching game:",o),o.url}}catch(e){return console.error("Error:",e),""}}async function c(){try{const e=await r.collection("games").where("is_completed","==",!1).orderBy("sort_order").limit(1).get();if(e.empty)return console.log("No more games to complete."),null;{const o=e.docs[0],a=o.data();return console.log("First not completed game:",a),a.id=o.id,a}}catch(e){return console.error("Error:",e),null}}async function l(e){try{await r.collection("games").doc(e).update({gate:t}),console.log("Game",e,"marked as gate",t)}catch(o){console.error("Error updating game data:",o)}}c().then(e=>{e&&(e.gate===""?s().then(o=>{o!==""?window.location.href=o:l(e.id).then(()=>{window.location.href=e.url})}):e.gate!==t?alert("предыдущая глава расследования еще не завершена!"):window.location.href=e.url,console.log("game",e))});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi0yMTgxZGY0YS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vaW5kZXguaHRtbD9odG1sLXByb3h5JmluZGV4PTAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICAgIC8vIEltcG9ydCB0aGUgZnVuY3Rpb25zIHlvdSBuZWVkIGZyb20gdGhlIFNES3MgeW91IG5lZWRcbiAgICAgICAgLy8gVE9ETzogQWRkIFNES3MgZm9yIEZpcmViYXNlIHByb2R1Y3RzIHRoYXQgeW91IHdhbnQgdG8gdXNlXG4gICAgICAgIC8vIGh0dHBzOi8vZmlyZWJhc2UuZ29vZ2xlLmNvbS9kb2NzL3dlYi9zZXR1cCNhdmFpbGFibGUtbGlicmFyaWVzXG4gICAgICAgIC8vIFlvdXIgd2ViIGFwcCdzIEZpcmViYXNlIGNvbmZpZ3VyYXRpb25cbiAgICAgICAgY29uc3QgZmlyZWJhc2VDb25maWcgPSB7XG4gICAgICAgICAgICBhcGlLZXk6IFwiQUl6YVN5RDE5aFhsN1RfaFIyMlJLVGJPMEhScXpKTFdCLWRobnB3XCIsXG4gICAgICAgICAgICBhdXRoRG9tYWluOiBcInNtYWxsLWdhbWVzLWRkYTdhLmZpcmViYXNlYXBwLmNvbVwiLFxuICAgICAgICAgICAgcHJvamVjdElkOiBcInNtYWxsLWdhbWVzLWRkYTdhXCIsXG4gICAgICAgICAgICBzdG9yYWdlQnVja2V0OiBcInNtYWxsLWdhbWVzLWRkYTdhLmFwcHNwb3QuY29tXCIsXG4gICAgICAgICAgICBtZXNzYWdpbmdTZW5kZXJJZDogXCI1MzYyOTQ4NDk5OTRcIixcbiAgICAgICAgICAgIGFwcElkOiBcIjE6NTM2Mjk0ODQ5OTk0OndlYjphN2VhZjY2NmY2OGY0NmM1MzdlMzMzXCJcbiAgICAgICAgfTtcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBGaXJlYmFzZVxuICAgICAgICAvLyBjb25zdCBhcHAgPSBpbml0aWFsaXplQXBwKGZpcmViYXNlQ29uZmlnKTtcblxuICAgICAgICBpZiAoIWZpcmViYXNlLmFwcHMubGVuZ3RoKSB7XG4gICAgICAgICAgICBmaXJlYmFzZS5pbml0aWFsaXplQXBwKGZpcmViYXNlQ29uZmlnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGRiID0gZmlyZWJhc2UuZmlyZXN0b3JlKCk7XG5cbiAgICAgICAgY29uc3QgZ2F0ZUlkID0gXCIzXCJcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgYXN5bmMgZnVuY3Rpb24gaXNHYXRlQWxyZWFkeVVzZWQoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHF1ZXJ5U25hcHNob3QgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiZ2FtZXNcIilcbiAgICAgICAgICAgICAgICAgICAgLndoZXJlKFwiZ2F0ZVwiLCBcIj09XCIsIGdhdGVJZClcbiAgICAgICAgICAgICAgICAgICAgLmdldCgpO1xuXG4gICAgICAgICAgICAgICAgaWYgKCFxdWVyeVNuYXBzaG90LmVtcHR5KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGdhbWUgPSBxdWVyeVNuYXBzaG90LmRvY3NbMF0uZGF0YSgpO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRm91bmQgbWF0Y2hpbmcgZ2FtZTonLCBnYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdhbWUudXJsO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdObyBtYXRjaGluZyBnYW1lIGZvdW5kLicpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjonLCBlcnIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgYXN5bmMgZnVuY3Rpb24gZ2V0Rmlyc3ROb3RDb21wbGV0ZWRHYW1lKCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBxdWVyeVNuYXBzaG90ID0gYXdhaXQgZGIuY29sbGVjdGlvbihcImdhbWVzXCIpXG4gICAgICAgICAgICAgICAgICAgIC53aGVyZShcImlzX2NvbXBsZXRlZFwiLCBcIj09XCIsIGZhbHNlKVxuICAgICAgICAgICAgICAgICAgICAub3JkZXJCeSgnc29ydF9vcmRlcicpXG4gICAgICAgICAgICAgICAgICAgIC5saW1pdCgxKVxuICAgICAgICAgICAgICAgICAgICAuZ2V0KCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIXF1ZXJ5U25hcHNob3QuZW1wdHkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZG9jID0gcXVlcnlTbmFwc2hvdC5kb2NzWzBdO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBnYW1lID0gZG9jLmRhdGEoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0ZpcnN0IG5vdCBjb21wbGV0ZWQgZ2FtZTonLCBnYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgZ2FtZS5pZCA9IGRvYy5pZDsgLy8gQWRkaW5nIHRoZSBkb2N1bWVudCBJRCB0byB0aGUgZ2FtZSBvYmplY3RcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdhbWU7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ05vIG1vcmUgZ2FtZXMgdG8gY29tcGxldGUuJyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yOicsIGVycik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBhc3luYyBmdW5jdGlvbiBtYXJrR2FtZUdhdGUoZ2FtZUlkKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJnYW1lc1wiKS5kb2MoZ2FtZUlkKS51cGRhdGUoe1xuICAgICAgICAgICAgICAgICAgICBnYXRlOiBnYXRlSWRcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnR2FtZScsIGdhbWVJZCwgJ21hcmtlZCBhcyBnYXRlJywgZ2F0ZUlkKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBkYXRpbmcgZ2FtZSBkYXRhOicsIGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGdldEZpcnN0Tm90Q29tcGxldGVkR2FtZSgpLnRoZW4oZ2FtZSA9PiB7XG4gICAgICAgICAgICBpZiAoIWdhbWUpIHJldHVybjtcblxuICAgICAgICAgICAgaWYgKGdhbWUuZ2F0ZSA9PT0gXCJcIikge1xuICAgICAgICAgICAgICAgIGlzR2F0ZUFscmVhZHlVc2VkKCkudGhlbigoZ2FtZVVybCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZ2FtZVVybCAhPT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBnYW1lVXJsO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFya0dhbWVHYXRlKGdhbWUuaWQpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gZ2FtZS51cmw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAoZ2FtZS5nYXRlICE9PSBnYXRlSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgYWxlcnQoXCLQv9GA0LXQtNGL0LTRg9GJ0LDRjyDQs9C70LDQstCwINGA0LDRgdGB0LvQtdC00L7QstCw0L3QuNGPINC10YnQtSDQvdC1INC30LDQstC10YDRiNC10L3QsCFcIik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBnYW1lLnVybDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZ2FtZScsIGdhbWUpO1xuICAgICAgICB9KTtcbiAgICAiXSwibmFtZXMiOlsiZmlyZWJhc2VDb25maWciLCJkYiIsImdhdGVJZCIsImlzR2F0ZUFscmVhZHlVc2VkIiwicXVlcnlTbmFwc2hvdCIsImdhbWUiLCJlcnIiLCJnZXRGaXJzdE5vdENvbXBsZXRlZEdhbWUiLCJkb2MiLCJtYXJrR2FtZUdhdGUiLCJnYW1lSWQiLCJlcnJvciIsImdhbWVVcmwiXSwibWFwcGluZ3MiOiI2Q0FLUSxNQUFNQSxFQUFpQixDQUNuQixPQUFRLDBDQUNSLFdBQVksb0NBQ1osVUFBVyxvQkFDWCxjQUFlLGdDQUNmLGtCQUFtQixlQUNuQixNQUFPLDJDQUNuQixFQUlhLFNBQVMsS0FBSyxRQUNmLFNBQVMsY0FBY0EsQ0FBYyxFQUd6QyxNQUFNQyxFQUFLLFNBQVMsWUFFZEMsRUFBUyxJQUVmLGVBQWVDLEdBQW9CLENBQy9CLEdBQUksQ0FDQSxNQUFNQyxFQUFnQixNQUFNSCxFQUFHLFdBQVcsT0FBTyxFQUM1QyxNQUFNLE9BQVEsS0FBTUMsQ0FBTSxFQUMxQixNQUVMLEdBQUtFLEVBQWMsTUFLZixlQUFRLElBQUkseUJBQXlCLEVBQzlCLEdBTmUsQ0FDdEIsTUFBTUMsRUFBT0QsRUFBYyxLQUFLLENBQUMsRUFBRSxLQUFJLEVBQ3ZDLGVBQVEsSUFBSSx1QkFBd0JDLENBQUksRUFDakNBLEVBQUssSUFLbkIsT0FBUUMsRUFBUCxDQUNFLGVBQVEsTUFBTSxTQUFVQSxDQUFHLEVBQ3BCLEVBQ1YsQ0FDSixDQUVELGVBQWVDLEdBQTJCLENBQ3RDLEdBQUksQ0FDQSxNQUFNSCxFQUFnQixNQUFNSCxFQUFHLFdBQVcsT0FBTyxFQUM1QyxNQUFNLGVBQWdCLEtBQU0sRUFBSyxFQUNqQyxRQUFRLFlBQVksRUFDcEIsTUFBTSxDQUFDLEVBQ1AsTUFFTCxHQUFLRyxFQUFjLE1BT2YsZUFBUSxJQUFJLDRCQUE0QixFQUNqQyxLQVJlLENBQ3RCLE1BQU1JLEVBQU1KLEVBQWMsS0FBSyxDQUFDLEVBQzFCQyxFQUFPRyxFQUFJLE9BQ2pCLGVBQVEsSUFBSSw0QkFBNkJILENBQUksRUFDN0NBLEVBQUssR0FBS0csRUFBSSxHQUNQSCxFQUtkLE9BQVFDLEVBQVAsQ0FDRSxlQUFRLE1BQU0sU0FBVUEsQ0FBRyxFQUNwQixJQUNWLENBQ0osQ0FFRCxlQUFlRyxFQUFhQyxFQUFRLENBQ2hDLEdBQUksQ0FDQSxNQUFNVCxFQUFHLFdBQVcsT0FBTyxFQUFFLElBQUlTLENBQU0sRUFBRSxPQUFPLENBQzVDLEtBQU1SLENBQzFCLENBQWlCLEVBQ0QsUUFBUSxJQUFJLE9BQVFRLEVBQVEsaUJBQWtCUixDQUFNLENBQ3ZELE9BQVFTLEVBQVAsQ0FDRSxRQUFRLE1BQU0sNEJBQTZCQSxDQUFLLENBQ25ELENBQ0osQ0FFREosRUFBMEIsRUFBQyxLQUFLRixHQUFRLENBQy9CQSxJQUVEQSxFQUFLLE9BQVMsR0FDZEYsRUFBbUIsRUFBQyxLQUFNUyxHQUFZLENBQzlCQSxJQUFZLEdBQ1osT0FBTyxTQUFTLEtBQU9BLEVBRXZCSCxFQUFhSixFQUFLLEVBQUUsRUFBRSxLQUFLLElBQU0sQ0FDN0IsT0FBTyxTQUFTLEtBQU9BLEVBQUssR0FDeEQsQ0FBeUIsQ0FFekIsQ0FBaUIsRUFFR0EsRUFBSyxPQUFTSCxFQUNkLE1BQU0sa0RBQWtELEVBRXhELE9BQU8sU0FBUyxLQUFPRyxFQUFLLElBR3BDLFFBQVEsSUFBSSxPQUFRQSxDQUFJLEVBQ3BDLENBQVMifQ==
